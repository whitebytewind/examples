#include<iostream>
#include<vector>

// Задача из хендбука "Основы С++" от Яндекса https://education.yandex.ru/handbook/cpp

/* Вам необходимо построить поле для игры «Сапёр» по его конфигурации — высоте, ширине и координатам расставленных на нем мин.

Вкратце напомним правила построения поля для игры «Сапёр»:

    поле состоит из клеток с минами и пустых клеток;
    клетки с миной обозначаются символом *;
    пустые клетки содержат число от 0 до 8 — количество мин на соседних клетках.

Формат ввода

В первой строке содержатся три числа:

    число m m от 1 до 100 — количество строк на поле;
    число n n от 1 до 100 — количество столбцов на поле;
    число k k от 0 до m n mn — количество мин на поле.

В следующих k k строках содержатся пары чисел с координатами мин (номерами строки и столбца). Нумерация ведётся с единицы.
Формат вывода

Выведите построенное поле, разделяя строки поля символом \n, а столбцы — пробелом.

Пример
Ввод

3 2 2
1 1
2 2

Вывод

* 2
2 *
1 1
*/

using namespace std;

vector <int> around_coord(int x, int y, int m, int n)
{
    // составляем список координат вокруг поля с миной
    vector <int> res;
    int line = 0;
    int col = 0;
    for (int i = -1; i < 2; i++)
    {
        for (int j = -1; j < 2; j++)
        {
            line = x + i;
            col  = y + j;
            
            if (line < 0 || col < 0) continue; // выход за границы
            if (line > m || col > n) continue; // выход за границы
            if ((i == 0) && (j == 0)) continue; // координаты самой мины
            
            res.push_back(line);
            res.push_back(col);
        }
    }
    return res;
}

int main()
{
    int m = 0,  // строки
        n = 0,  // столбцы
        k = 0;  // мины

    // игровое поле
    cin >> m >> n >> k;
    vector<vector<char>> field(m, vector<char>(n, '0')); 
    
    // координаты миин
    vector <int> mines;
    int num = 0;
    for (int i = 0; i < k*2; i++)
    {
        std::cin >> num;
        mines.push_back(num);
    }
    
    // расставляем мины
    int line = 0;    // строка
    int col  = 0;    // столбец
    for (int i = 0; i < k*2; i+=2)
    {
        line = mines[i] - 1;   // нумерация с единицы
        col = mines[i+1] - 1;  // нумерация с единицы
        
        field[line][col] = '*';
    }
    
    // расставляем цифры вокруг мин
    for (int i = 0; i < k*2; i+=2)
    {
        // получаем список валидных координат
        line = mines[i] - 1;    // нумерация с единицы
        col =  mines[i+1] - 1;  // нумерация с единицы
        vector <int> res = around_coord(line, col, m - 1, n - 1);
        
        // увеличивыем цифры в них
        for (size_t j = 0; j < res.size(); j+=2)
        {
            line = res[j];
            col =  res[j+1];
            if (field[line][col] == '*') continue;
            field[line][col]++;
        }
    }
     
    // напечатаем матрицу, выводя элементы через табуляцию
    for (int i = 0; i != m; ++i) {
        for (int j = 0; j != n; ++j) {
            std::cout << field[i][j] << ' ';
        }
        std::cout << "\n";
    }
    return 0;
}
